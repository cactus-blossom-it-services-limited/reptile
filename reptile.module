<?php

/**
 * @param $variables
 * Implements template_preprocess_page
 * @see bottom of page:
 * https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Path%21PathMatcher.php/function/PathMatcher%3A%3AmatchPath/8.2.x
 * For the useful path.matcher snippet used in lines 13- 15
 */
function reptile_preprocess_page(&$variables) {
    $variables['page']['#cache']['contexts'][] = 'url.path'; // sets the cacheability metadata

    $current_path = \Drupal::service('path.current')->getPath();
    $patterns = "/reptile/*\n/reptile/form/*";
    $match = \Drupal::service('path.matcher')->matchPath($current_path, $patterns);

    if ($match === TRUE) {
        $variables['#attached']['library'][] =
        'reptile/image-replace';
    }

}

/**
 * Implements hook_theme_suggestions_hook_alter()
 * Il implémente ceci pour utiliser un modèle différent pour les formes
 * qui ont l'élément personnalisé #image_replace (It implements this to use a
 * different template for forms with the #image_replace element set to TRUE)
 * @param $suggestions
 * @param $variables
 */

function template_theme_suggestions_form_element_alter(array &$suggestions, array $variables)
{
    if (!empty($variables['element']['#image_replace'])) {
        $suggestions[] = 'form_element__imagereplace';
    }
}


function reptile_preprocess_form_element__imagereplace(&$variables)
{
    if (!empty($variables['element']['#image_tag'])) {
        $variables['image_tag'] = $variables['element']['#image_tag'];
    }
}

/**
 * Implements hook_theme().
 */
function reptile_theme($existing, $type, $theme, $path)
{
    return array(
        // Make Drupal aware of our node template for my view mode.
        'form__image_replace_two' => array(
            'base hook' => 'form',
        ),
    'form_element__imagereplace' => array(
    'base hook' => 'form_element',
        ),
    );

}
